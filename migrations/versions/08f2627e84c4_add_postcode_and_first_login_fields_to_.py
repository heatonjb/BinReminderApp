"""Add postcode and first login fields to User model and create PostcodeSchedule model

Revision ID: 08f2627e84c4
Revises: 8a2d4f5e1234
Create Date: 2025-01-12 12:14:33.749508

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = '08f2627e84c4'
down_revision = '8a2d4f5e1234'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Check if postcode column exists
        conn = op.get_bind()
        inspector = sa.inspect(conn)
        columns = [c['name'] for c in inspector.get_columns('user')]

        if 'postcode' not in columns:
            batch_op.add_column(sa.Column('postcode', sa.String(length=10), nullable=True))

        if 'first_login' not in columns:
            batch_op.add_column(sa.Column('first_login', sa.Boolean(), server_default='true', nullable=False))

    # Set default values for existing users
    op.execute(text(
        "UPDATE \"user\" SET first_login = true WHERE first_login IS NULL"
    ))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('first_login')
        batch_op.drop_column('postcode')

    # ### end Alembic commands ###